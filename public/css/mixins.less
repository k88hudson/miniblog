/*********************************************************
* Mixins
*/

.noiseBackground( @color ) when ( lightness( @color ) =< 50% ) {
  background: @color @noise;
}

.noiseBackground( @color ) when ( lightness( @color ) > 50%  ) {
  background: @color @noise2;
}

.noiseBackground( @color, @color2 ) {
   background: @noise, -webkit-linear-gradient(top, @color 0%, @color2 100%);
   background: @noise, -moz-linear-gradient(to, @color 0%,@color2 100%);
   background: @noise, -ms-linear-gradient(top, @color 0%,@color2 100%);
   background: @noise, -o-linear-gradient(top, @color 0%,@color2 100%);
   background: @noise, linear-gradient(top, @color);
}

._gradient( @args ) when not ( isstring( @args ) ) {
   // This is a private mixin used by gradient functions
   background: -webkit-linear-gradient( @args );
   background: -moz-linear-gradient( @args );
   background: -ms-linear-gradient( @args );
   background: -o-linear-gradient( @args );
   background: linear-gradient( @args );
}

._gradient(@angle, @startCol, @stopCol, @startLoc, @endLoc, @startPerc, @stopPerc) {
   // This is a private mixin used by gradient functions
   background: -webkit-gradient(linear,left @startLoc,left @endLoc,color-stop(@startPerc,@startCol),color-stop(@stopPerc,@stopCol));
   background: -webkit-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -moz-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -ms-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: -o-linear-gradient(@angle @startLoc,@startCol @startPerc,@stopCol @stopPerc);
   background: linear-gradient(@angle @startLoc, @startCol);
} 

.gradient( "vertical", @color, @color2, @from: 0%, @to: 100% ) {
  background: -moz-linear-gradient(top, @color @from, @color2 @to);
  background: -webkit-linear-gradient(top, @color @from, @color2 @to);
  background: -o-linear-gradient(top, @color @from, @color2 @to);
  background: -ms-linear-gradient(top, @color @from, @color2 @to);
  background: linear-gradient(top, @color @from, @color2 @to);
}

.gradient( "horizontal", @color, @color2, @from: 0%, @to: 100% ) {
  background: -moz-linear-gradient(left, @color @from, @color2 @to);
  background: -webkit-linear-gradient(left, @color @from, @color2 @to);
  background: -o-linear-gradient(left, @color @from, @color2 @to);
  background: -ms-linear-gradient(left, @color @from, @color2 @to);
  background: linear-gradient(left, @color @from, @color2 @to);
}

.gradient( "radial", @color, @color2, @start: 50%, @from: 0%, @to: 100% ) {
  background: -moz-radial-gradient( center @start, @color @from, @color2 @to );
  // This looks like crap in FF. 
  background: -webkit-radial-gradient(center @start, @color @from, @color2 @to);
  background: -o-radial-gradient( center @start, @color @from, @color2 @to );
  background: -ms-radial-gradient( center @start, @color @from, @color2 @to );
  background: radial-gradient( center @start, @color @from, @color2 @to );
}

.gradient( "wash", @color, @color2, @color3, @coverage: 100%, @corner: top right ) {
  background: @noise,
    -moz-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -moz-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -webkit-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -webkit-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -o-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -o-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    -ms-linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    -ms-linear-gradient(top, @color 0%, @color2 100%);
  background: @noise,
    linear-gradient( @corner, @color3 0%, fade( @color3, 0% ) @coverage ),
    linear-gradient(top, @color 0%, @color2 100%);
  background-repeat: repeat, no-repeat;
  background-attachment: fixed;
}

/*********************************************************
* Lighting Effects
*/

// Usage:
// .gradiatedBorder( @red );
// .gradiatedBorder( @red, lighten( @red, 5% ), darken( @red, 5% ) );
.gradiatedBorder( @color ) {
  border: 1px solid darken( @color, 10% );
  border-top-color: darken( @color, 5% );
  border-bottom-color: darken( @color, 20% );
}
.gradiatedBorder( @color ) when ( lightness( @color ) > 50% ) {
  border: 1px solid darken( @color, 20% );
  border-top-color: darken( @color, 10% );
  border-bottom-color: darken( @color, 25% );
}
.gradiatedBorder( @color, @topColor, @bottomColor ) when ( iscolor( @topColor ) ) {
  border: 1px solid @color;
  border-top-color: @topColor;
  border-bottom-color: @bottomColor;
}

// Usage:
// .glow( @blue, 0 1px 2px #000 );
// .glow( @blue, "light" );
// .glow( @darkBlue, "dark" );
.glow( @color, @shadow: 0 1px 2px 0 rgba( 0, 0, 0, .2 ) ) when not ( isstring( @shadow ) ) {
  box-shadow: inset 0 1px 0 0 lighten( @color, 20% ),
    inset 1px 0 0 0 lighten( @color, 4%),
    inset -1px 0 0 0 lighten( @color, 4%),
    inset 0 -1px 0 0 lighten( @color, 4%),
    @shadow;
  .gradiatedBorder( darken( @color, 5% ) );
}
.glow( @color, "light" ) {
  box-shadow: inset 0 1px 0 0 lighten( @color, 20% ),
    inset 1px 0 0 0 lighten( @color, 4%),
    inset -1px 0 0 0 lighten( @color, 4%),
    inset 0 -1px 0 0 lighten( @color, 4%),
    0 1px 3px 0 rgba( 0, 0, 0, .1 );
  .gradiatedBorder( darken( @color, 10% ) );
}
.glow( @color, "dark" ) {
  box-shadow: inset 0 1px 0 0 lighten( @color, 10% ),
    inset 1px 0 0 0 lighten( @color, 4%),
    inset -1px 0 0 0 lighten( @color, 4%),
    inset 0 -1px 0 0 lighten( @color, 4%),
    0 1px 3px 0 rgba( 0, 0, 0, .4 );
}

.glowTop( @color, @shadow) {
  box-shadow: inset 0 1px 0 0 lighten( @color, 10% ),
    @shadow;
}

.punched( @alpha1: 0.7, @alpha2: 0.1 ) {
  box-shadow: inset 0 1px 1px 0 rgba( 0, 0, 0, @alpha1 ),
    0 1px 0 0 rgba( 255, 255, 255, @alpha2);
}

/*********************************************************
* Prefixing
*/

.transition( @arguments: all .2s ease ) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  -ms-transition: @arguments;
  transition: @arguments;
}

.box-sizing( @property ) {
  // https://developer.mozilla.org/En/CSS/Box-sizing
  -webkit-box-sizing: @property; // Chrome 10-
  -moz-box-sizing: @property;
  -ms-box-sizing: @property; // IE 8+
  box-sizing: @property; // Opera, Safari 5.1+, Chrome 10+
}

/*********************************************************
* Other Useful Functions
*/

.clearfix() {
  *zoom: 1;
  &:before, 
  &:after { 
    content: "";
    display: table; 
  }
  &:after { clear: both; }
}
